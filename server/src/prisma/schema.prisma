generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// Enums for property-related fields
enum PropertyType {
  HOUSE
  APARTMENT
  VILLA
  TOWNHOUSE
  LAND
  COMMERCIAL
}

enum OwnershipType {
  SALE
  RENT
}

model User {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  googleId    String?    @unique
  githubId    String?    @unique
  firstName   String
  lastName    String
  username    String
  email       String     @unique
  phoneNumber String
  city        String
  country     String
  password    String
  avatar      String?
  createdAt   DateTime   @default(now())
  // Add relation to Property
  properties  Property[] // One user can have many properties
}

model Property {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId

  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt

  // Property Type & Ownership
  propertyType  PropertyType
  ownershipType OwnershipType
  price         Float

  // Location
  address       String
  city          String
  state         String
  zipCode       String?
  country       String
  latitude      Float?
  longitude     Float?

  // Property Information
  title         String
  description   String
  totalFloors   Int
  bedrooms      Int
  bathrooms     Int
  garages       Int
  squareMeters  Float
  yearBuilt     Int?

  // Property Features
  hasPool           Boolean   @default(false)
  hasGarden         Boolean   @default(false)
  hasSecurity       Boolean   @default(false)
  hasAirConditioning Boolean  @default(false)
  hasCentralHeating Boolean   @default(false)
  hasInternet       Boolean   @default(false)
  isFurnished       Boolean   @default(false)

  // Relations
  photos        PropertyPhoto[]
  owner         User           @relation(fields: [ownerId], references: [id])
  ownerId       String         @db.ObjectId

  @@index([ownerId])
}

model PropertyPhoto {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  fileName     String
  originalName String
  path         String
  mimetype     String
  size         Int
  isMainPhoto  Boolean  @default(false)
  uploadedAt   DateTime @default(now())
  property     Property @relation(fields: [propertyId], references: [id])
  propertyId   String   @db.ObjectId

  @@index([propertyId])
}